// Generated by CoffeeScript 1.9.3
(function() {
  var addContact, clearElement, getPosition, getProperties, getSize, handleDropContactEvent, removeCardContact, setBackgroundColor, setFontColor, setFontSize, setPosition, setProperties, setSize, setText;

  $(function() {
    $('.contact').draggable({
      containment: '.row',
      cursor: 'move',
      revert: true,
      helper: 'clone'
    });
    $('.card').droppable({
      accept: '.contact',
      hoverClass: 'hovered',
      drop: handleDropContactEvent
    });
    $('#deleteBtn').click(function() {
      removeCardContact();
      return $('.properties').hide();
    });
    $('.card').dblclick(function() {
      $('.properties').hide();
      return clearElement();
    });
    $('*').keydown(function(event) {
      if (event.which === 46 || event.which === 27) {
        $('.properties').hide();
        removeCardContact();
      }
      if (event.which === 13) {
        setProperties();
        return clearElement();
      }
    });
    $('#jobs-link').click(function() {
      $('#contacts').hide();
      $('#contacts-link').parent().removeClass('active');
      $('#jobs').show('fast');
      $('#jobs-link').parent().addClass('active');
      return false;
    });
    $('#contacts-link').click(function() {
      $('#jobs').hide();
      $('#jobs-link').parent().removeClass('active');
      $('#contacts').show('fast');
      $('#contacts-link').parent().addClass('active');
      return false;
    });
    $("#openModal").click(function() {
      $('.properties').hide();
      clearElement();
      return $('#myModal').modal();
    });
    $("#uploadPdfBtn").click(function() {
      return $('#mySpiner').modal();
    });
    $('#mySpiner').bind("ajaxSend", function() {
      return $(this).modal('show');
    }).bind("ajaxComplete", function() {
      return $(this).modal('hide');
    });
    $("#submitBtn").click(function() {
      var contact, i, json, len, ref;
      $('#myModal').modal('hide');
      json = {
        "name": $("#nameCard").val(),
        "contactCards": []
      };
      ref = $('.contactCards');
      for (i = 0, len = ref.length; i < len; i++) {
        contact = ref[i];
        addContact(contact, json.contactCards);
      }
      $.ajax({
        type: "POST",
        url: "/saveCard",
        dataType: 'json',
        data: JSON.stringify(json),
        encoding: "UTF-8",
        contentType: "application/json; charset=UTF-8",
        mimeType: 'application/json',
        error: function() {
          return console.log("WOOPS");
        },
        success: function(response) {
          console.log("SUCCESS idCard: " + response.id);
          return html2canvas($(".card"), {
            onrendered: function(canvas) {
              var imageData;
              imageData = canvas.toDataURL();
              return $.ajax({
                url: '/saveCard/saveCardImage',
                data: {
                  idCard: response.id,
                  image: imageData
                },
                type: 'POST',
                dataType: 'json',
                timeout: 10000,
                async: false,
                error: function() {
                  return console.log("WOOPS");
                },
                success: function(response) {
                  return console.log("SUCCESS url: " + response.url);
                }
              });
            }
          });
        }
      });
      return true;
    });
    $('#textContacts').on('input', function() {
      return setProperties();
    });
    $('#fontSize').on('input', function() {
      return setProperties();
    });
    $('#fontColor').on('input', function() {
      return setProperties();
    });
    $('#backgroundColor').on('input', function() {
      return setProperties();
    });
    $('#width').on('input', function() {
      return setProperties();
    });
    $('#height').on('input', function() {
      return setProperties();
    });
    $('#positionX').on('input', function() {
      return setProperties();
    });
    $('#positionY').on('input', function() {
      return setProperties();
    });
    $('#contacts').hide();
    return $('.properties').hide();
  });

  handleDropContactEvent = function(event, ui) {
    var $contact;
    $contact = $('<div>').attr({
      "class": 'contactCards'
    });
    $contact.text(ui.draggable.text());
    $contact.css({
      position: 'absolute'
    });
    $('.card').append($contact);
    $contact.position({
      my: "center",
      at: "center",
      of: ".card"
    });
    $contact.draggable({
      containment: '.card',
      cursor: 'move'
    });
    return $contact.click(function() {
      clearElement();
      $('.properties').show('fast');
      $(this).addClass('edit');
      $(this).resizable({
        resize: function(event, ui) {
          return getSize(ui);
        }
      });
      $(this).draggable({
        containment: '.card',
        cursor: 'move',
        drag: function(event, ui) {
          return getPosition(ui.helper);
        }
      });
      return getProperties($(this));
    });
  };

  removeCardContact = function() {
    return $('.edit').remove();
  };

  clearElement = function() {
    $('.edit').resizable("destroy");
    return $('.card > *').removeClass('edit');
  };

  getSize = function(ui) {
    $('#width').val(ui.size.width);
    return $('#height').val(ui.size.height);
  };

  getPosition = function(ui) {
    $('#positionX').val(ui.position().left);
    return $('#positionY').val(ui.position().top);
  };

  getProperties = function(ui) {
    $('#textContacts').val(ui[0].innerText);
    $('#fontSize').val(ui.css('font-size'));
    $('#fontColor').val(ui.css('color'));
    $('#backgroundColor').val(ui.css('backgroundColor'));
    $('#width').val(ui.outerWidth());
    $('#height').val(ui.outerHeight());
    return getPosition(ui);
  };

  setProperties = function() {
    setSize();
    setPosition();
    setText();
    setFontSize();
    setFontColor();
    return setBackgroundColor();
  };

  setSize = function() {
    var h, maxH, maxW, minH, minW, w;
    maxW = $('.card').outerWidth(true) - $('.edit').position.left;
    maxH = $('.card').outerHeight(true) - $('.edit').position.top;
    minW = $('.edit').width();
    minH = $('.edit').height();
    w = parseInt($('#width').val());
    h = parseInt($('#height').val());
    if (w > maxW) {
      w = maxW;
    }
    if (h > maxH) {
      h = maxH;
    }
    if (w < minW) {
      w = minW;
    }
    if (h < minH) {
      h = minH;
    }
    return $('.edit').css({
      'width': w,
      'height': h
    });
  };

  setPosition = function() {
    var maxX, maxY, x, y;
    maxX = $('.card').outerWidth(true) - $('.edit').outerWidth(true);
    maxY = $('.card').outerHeight(true) - $('.edit').outerHeight(true);
    x = parseInt($('#positionX').val());
    y = parseInt($('#positionY').val());
    if (x > maxX) {
      x = maxX;
    }
    if (x < 0) {
      x = 0;
    }
    if (y > maxY) {
      y = maxY;
    }
    if (y < 0) {
      y = 0;
    }
    $('.edit').parent().css({
      position: 'relative'
    });
    return $('.edit').css({
      top: y,
      left: x,
      position: 'absolute'
    });
  };

  setText = function() {
    return $('.edit').text($('#textContacts').val());
  };

  setFontSize = function() {
    var currentFontSizeNum;
    currentFontSizeNum = parseFloat($('#fontSize').val(), 10);
    return $('.edit').css('font-size', currentFontSizeNum);
  };

  setFontColor = function() {
    return $('.edit').css('color', $('#fontColor').val());
  };

  setBackgroundColor = function() {
    return $('.edit').css('background-color', $('#backgroundColor').val());
  };

  addContact = function(ui, arr) {
    return arr.push({
      "text": $(ui)[0].innerText,
      "font": $(ui).css('font-size'),
      "color": $(ui).css('color'),
      "bgcolor": $(ui).css('backgroundColor'),
      "width": $(ui).outerWidth(),
      "height": $(ui).outerHeight(),
      "xposition": $(ui).position().left,
      "yposition": $(ui).position().top
    });
  };

}).call(this);
